@use "sass:color";
@use "sass:math";

// scss-docs-start alert-variant-mixin
@mixin alert-variant($background, $border, $color) {
  color: $color;
  @include gradient-bg($background);
  border-color: $border;

  .alert-link {
    color: shade-color($color, 20%);
  }
}
// scss-docs-end alert-variant-mixin

//
// Base styles
//

.alert {
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: $alert-border-width solid transparent;
  @include border-radius($alert-border-radius);
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $alert-link-font-weight;
}


// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: $alert-dismissible-padding-r;

  // Adjust close link position
  .btn-close {
    position: absolute;
    top: 0;
    right: 0;
    z-index: $stretched-link-z-index + 1;
    padding: $alert-padding-y * 1.25 $alert-padding-x;
  }
}


// scss-docs-start alert-modifiers
// Generate contextual modifier classes for colorizing the alert.

@each $state, $value in $theme-colors {
  $alert-background: shift-color($value, $alert-bg-scale);
  $alert-border: shift-color($value, $alert-border-scale);
  $alert-color: shift-color($value, $alert-color-scale);
  @if (contrast-ratio($alert-background, $alert-color) < $min-contrast-ratio) {
    $alert-color: color.mix($value, color-contrast($alert-background), math.abs($alert-color-scale));
  }
  .alert-#{$state} {
    @include alert-variant($alert-background, $alert-border, $alert-color);
  }
}
// scss-docs-end alert-modifiers


//------------------------------------

.alert {
	$alert: &;

    // ensures icon and text appears aligned (also prevents text wrapping underneath icon)
    &__internal {
        display: flex;
        align-items: center;
    }

    // icon
    &__icon {
        font-size: 2rem;
        margin-inline-end: 0.75rem;
    }

    &__content {
		min-width: calc(100% - 3rem);
		
        p:last-of-type {
            margin-bottom: 0;
        }

    }

    &-dismissable {

        .btn-close {
            float: right;
        }

        #{$alert}__content {
            margin-inline-end: 2rem;
        }

    }
	
    @each $state, $value in $theme-colors {
	/* TODO: support various shades based on CSS var theme colours

        &-#{$state} {
            color: var(--#{$state}-color-darker);
            background-color: var(--#{$state}-color-fade);
            //background-color: var(--#{$state}-color);
            border-color: var(--#{$state}-color-dark);
            
            #{$alert}-link, > a {
                color: var(--#{$state}-color-dark);
            }

        }

	*/
    }
	
}
